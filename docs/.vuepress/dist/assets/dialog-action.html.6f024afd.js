import{_ as n,o as s,c as a,e as t}from"./app.e9e118ac.js";const p={},e=t(`<p>\u4EE5\u4E0B\u64CD\u4F5C\u5728\u4EE3\u7801\u751F\u6210\u5668\u751F\u6210\u540E\u9ED8\u8BA4\u4E3A\u9875\u9762\u6A21\u5F0F, \u53EF\u901A\u8FC7\u914D\u7F6E\u5B9E\u73B0\u5F39\u7A97\u6A21\u5F0F</p><h3 id="\u65B0\u589E" tabindex="-1"><a class="header-anchor" href="#\u65B0\u589E" aria-hidden="true">#</a> \u65B0\u589E</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Page</span>
<span class="token punctuation">{</span>
	<span class="token comment">// ...</span>
	
	<span class="token comment">// \u66F4\u6539 controller \u4E2D list() \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</span>
	<span class="token comment">// \u8986\u76D6 list \u7684 toolbar \u5C5E\u6027</span>
	<span class="token comment">// \u7ED9 createButton() \u65B9\u6CD5\u6DFB\u52A0\u53C2\u6570 (\u9ED8\u8BA4\u6CA1\u6709)</span>
	<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">baseList</span><span class="token punctuation">(</span><span class="token variable">$crud</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toolbar</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">createButton</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u6539-\u8BE6\u60C5" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539-\u8BE6\u60C5" aria-hidden="true">#</a> \u4FEE\u6539&amp;\u8BE6\u60C5</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Page</span>
<span class="token punctuation">{</span>
    <span class="token variable">$crud</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">baseCRUD</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token class-name static-context">Column</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortable</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// ...</span>
            <span class="token function">amis</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;operation&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;\u64CD\u4F5C&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">buttons</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
                <span class="token comment">// \u7ED9\u65B9\u6CD5\u6DFB\u52A0\u53C2\u6570 true</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">rowEditButton</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">rowEditButton</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5176\u4ED6\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u65B9\u6CD5" aria-hidden="true">#</a> \u5176\u4ED6\u65B9\u6CD5</h3><blockquote><p>\u4EE5\u4E0B\u4E24\u4E2A\u65B9\u6CD5\u662F\u5BF9\u64CD\u4F5C\u5217\u7684\u5C01\u88C5, \u4E5F\u53EF\u4EE5\u901A\u8FC7\u4F20\u53C2\u63A7\u5236\u6A21\u5F0F</p></blockquote><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">rowActions</span><span class="token punctuation">(</span><span class="token variable">$dialog</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>
<span class="token function">rowActionsOnlyEditAndDelete</span><span class="token punctuation">(</span><span class="token variable">$dialog</span> <span class="token operator">=</span> fals<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","dialog-action.html.vue"]]);export{r as default};
